1) List the contents of a directory and their attributes
Ans: ls

2) Long list the content with file, directory ownership, permissions,sizes, etc…
Ans: ls -l

3) Display the size of the file in human readable format
Ans: ls -h

4) Show all files and folders including hidden one
Ans: ls -a

5) list directories recursively
Ans: ls -R

6) Sort the files by size with largest at the top
Ans: ls -S -l

7) Sort the files by last time modified displaying the newest first.
Ans: ls -t

8) Diplay the location of a program/command, where it is installed.
Ans: WHERE <filename>

9) Which command is used to switch directory from one to another
Ans:  cd ..
      cd PATH/dir_name

10) List all the environment variables set for the current shell environment
Ans: printenv

11) Did you notice something in the output of "env" command?
Ans: printenv command displays whole PC configuration/the environment we are working in and also contains local drives information.

12) Which command is used to print the text or any variables value in the Console/Terminal?
Ans: echo

13) Print the value of the env variable "PATH" on the console
Ans: echo $PATH

14) Is linux a case-sensitive operating system?
Ans: YES

15) Is, "Ls" same as "ls"?
Ans: NO

16) Display your currently logged in user
Ans: whoami

17) how do you change the currrently logged in user to another user?
Ans: su

18) Which command is used to leave a shell environment that you are currently logged in to?
Ans: exit

19) How do you reboot the system?
Ans: sudo reboot

20) How do you shutdown the system?
Ans: sudo poweroff -p

21) Display all the major running processes in the system
Ans: ps -a

22) Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
Ans: PID - Process id
     TTY – Teletype
     TIME – time of process
     CMD - Commands

23) Display the name of the system kernel
Ans: uname -s

24) display the kernel release number
Ans: uname -r

25) display teh machine type of the current kernel
Ans: uname -m

26) Display the name of the operating system that the kernel is running on
Ans: unmae -o

27) Display all info that uname command can show.
Ans: uname -a

28) Display the name of directory that you are currently pointing to
Ans: pwd

29) change the current directory to another directory that you have in your system.


30) Go up one directory
Ans: cd ..

31) Return to last directory
Ans: cd subdir/sub-subdir

32) change the current directory to home(logged in user's) directory


33) How to check all the command used from the prompt (Command History)
Ans: history

34) In which file the history of commands are stored in?
Ans: $HISTFILE

35) How many lines of history does the system keep and from where you can change it?
Ans: 1500 lines by default we can change it by command “export HISTSIZE=value”

36) How can you modify bash's history behaviour
Ans: export HISTCONTROL

37) Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.
Ans: !(no. which you want to jump to)


----------NOTE:- TAB key is your friend when it comes to command completion and 
          having long file and directory names autocompleted at the bash prompt for you. 
          JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)------------


37) What are the different types of shell and where are they used and how do we use them?
Ans: C Shell (csh) - It incorporates features such as aliases and command history. 
     It includes helpful programming features like built-in arithmetic and C-like expression syntax.
     Command full-path name is /bin/csh
     Non-root user default prompt is hostname %
     Root user default prompt is hostname #

     Bourne Shell (sh) - It is the original UNIX shell. It is faster and more preferred. It is default shell for Solaris OS.
     Command full-path name is /bin/sh and /sbin/sh
     Non-root user default prompt is $
     Root user default prompt is #

     Korn Shell (ksh) - it supports everything in the Bourne shell.It has interactive features. 
     It includes features like built-in arithmetic and C-like arrays, functions, and string-manipulation facilities.
     Command full-path name is /bin/ksh
     Non-root user default prompt is $
     Root user default prompt is #

     Bourne-Again Shell (bash) - It is compatible to the Bourne shell. It includes features from Korn and Bourne shell.
     Command full-path name is /bin/bash
     Default prompt for a non-root user is bash-g.gg$
     Root user default prompt is bash-g.gg#
     
38) What is the difference between login shell and non-login shell?
Ans: Login Shell - A Login shell is created after a successful login of user. 
     For example, when you login t a Linux system via terminal, SSH or switch to user with “su -” command.
     Non-login Shell - Non Login Shell is the shell, which is started by the login shell. 
     For example, A shell which you started from another shell or started by a program etc.

39) How do we start login shell and non-login shell?


40) What happens when you start a login shell (which files are read and used and Why)?


41) What happens when you start a non-login shell (Which files are read and used and Why)?


42) What are Shell Configuration Files, why do we need it?


43) Explain the Order of file usage from the system/user's home directory when user logs in to the System.


44) What are Shell Variables, list major shell variables and what do they represent?


45) How we see all our env variables?
Ans: env

46) How we see all env variables in alphabical order?


47) What Format does the env var and its values are stored?


48) How do you create your own varible?
Ans: set

49) How do you start a new bash shell?


50) Difference between Local/Shell variables to Global Variable


51) Making a variable accessible from other the shell in the system.


52) Show the real life use case of exporting a variable


53) Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"


54) What is Globbing? Explain in depth with examples?


55) List all entries with extension ".sh"
Ans: ls -l *.sh

56) List all entries with numbers in it.
Ans: ls *[0-9]*

57) List all entries that starts with a character and ends with a number
Ans: ls [ {a-z},{A-Z} ]*[0-9]

58) List all entries that name length more than 5 characters
Ans: ?????*

59) What is Quoting? and Why do we need it?


60) Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.


61) How do you find a particular files/directories based on a particular search criteria?



----------HINT:- look for commands -> locate, find and whereis---------



62) Write major difference between locate, find and whereis?
Ans: locate - find files by name
     find - finds one or more files assuming that you know their approximate filenames
     whereis - the whereis command is used to locate the binary, the source code and the online manual page for any specified program. 
     Take note it is not for searching your files.

63) How Globbing is different from locate, find and whereis?
Ans: Globbing - It is an operation that recognizes the wildcard pattern and expands it into its path name.

64) Explain the Linux File System.
Ans: A Linux file system is a structured collection of files on a disk drive or a partition. 
     A partition is a segment of memory and contains some specific data. 
     In our machine, there can be various partitions of the memory. 
     Generally, every partition contains a file system.

65) Explain absolute and Relative Paths
Ans: Absolute path - An absolute path is defined as specifying the location of a file or directory from the root directory(/). 
     In other words,we can say that an absolute path is a complete path from start of actual file system from / directory.

     Relative path - Relative path is defined as the path related to the present working directly(pwd). 
     It starts at your current directory and never starts with a / .

66) What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
Ans: touch command

67) In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
Ans: 

68) Archiving files using linux command, write a command to archive set of files from linux commands.
Ans: gzip *.txt

69) Extract the archived files from the above step.
Ans: gzip -d *.gzip
